@model StudentLinkUp_MVC_.Meeting

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@{ 

                UserProfile currentUser = (UserProfile)SignInManager.signedIn.Peek();
                UserProfile Seller = (UserProfile)MeetingsManager.meetingParticipants.Peek();
                LearningMaterial item = MeetingsManager.GetItem();
                MeetingsManager.AddMaterial(item);
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
        <h4>Meeting</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.meetingLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.meetingLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meetingLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.meetingDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.meetingDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meetingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.meetingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.meetingTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meetingTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userID_buyer, "Buyer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              <p>@(currentUser.username)</p>


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userID_seller, "Seller", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @(Seller.username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.materialID, "Item Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
        if (item.materialType == 1)
        {
                        <p>@(item.title + " " + item.edition + "E")</p>
                    }
        else
        {
                        <p>@(item.title)</p>
                    }
    }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
        }
    }

<div>
    @Html.ActionLink("Meetings", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
